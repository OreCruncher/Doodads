buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply from: 'configuration.gradle'

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    runDir = "run"
    replace '@VERSION@', project.ext.modVersion
    mappings = project.ext.snapshot
}

repositories {

    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
    
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    
    maven {
        name "Foxiehost"
        url "http://maven.foxiehost.eu"
    }
	
    maven {
    	name "Chisel"
    	url "http://maven.tterrag.com"
    }
    
    maven {
		url 'https://repo.elytradev.com/'
	}
	
	maven {
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
    
    maven { // TOP
	    name 'tterrag maven'
	    url "http://maven.tterrag.com/"
	}
}

dependencies {

    //compile "com.github.glitchfiend.biomesoplenty:BiomesOPlenty:1.12.2-7.0.1.2399:deobf"
    
	// http://dvs1.progwml6.com/files/maven/mezz/jei/
    deobfCompile "mezz.jei:jei_1.12.2:4.12.1.217:api"
    runtime "mezz.jei:jei_1.12.2:4.12.1.217"
    deobfCompile "com.azanor.baubles:Baubles:1.12-1.5.2"
	deobfCompile "cofh:RedstoneFlux:1.12-2.0.0.1:universal"
    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.20-12"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    description = 'Creates a JAR containing the source code.'
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    description = 'Creates a JAR containing the non-obfuscated compiled code.'
    from sourceSets.main.output
    classifier = "deobf"
}

//Adds the artifact types added by this script to the actual artifacts list.
artifacts {
    archives sourcesJar
    archives deobfJar
}

// https://gist.github.com/matthewprenger/9b2da059b89433a01c1c
task signJar(type: SignJar, dependsOn: reobfJar) {

    onlyIf { // Skip the task if our secret data isn't available
        project.hasProperty('keyStore')
    }

    keyStore = project.keyStore // This needs to be a path to the keystore file
    alias = project.keyStoreAlias
    storePass = project.keyStorePass
    keyPass = project.keyStoreKeyPass
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

signJar.dependsOn build
